{"version":3,"file":"react-photo-view.js","sources":["../src/hooks/useMethods.ts","../src/hooks/useSetState.ts","../src/photo-context.ts","../src/utils/isTouchDevice.ts","../src/utils/limitTarget.ts","../src/variables.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useEventListener.ts","../src/components/SlidePortal.tsx","../src/components/CloseIcon.tsx","../src/components/ArrowLeft.tsx","../src/components/ArrowRight.tsx","../src/components/PreventScroll.tsx","../src/utils/getMultipleTouchPosition.ts","../src/utils/edgeHandle.ts","../src/utils/getPositionOnMoveOrScale.ts","../src/utils/getRotateSize.ts","../src/utils/getSuitableImageSize.ts","../src/hooks/useDebounceCallback.ts","../src/hooks/useScrollPosition.ts","../src/hooks/useAnimationOrigin.tsx","../src/hooks/useMountedRef.ts","../src/components/Spinner.tsx","../src/Photo.tsx","../src/PhotoBox.tsx","../src/hooks/useContinuousTap.ts","../src/hooks/useAnimationPosition.ts","../src/hooks/useTargetScale.ts","../src/PhotoSlider.tsx","../src/hooks/useAnimationVisible.tsx","../src/hooks/useForkedVariable.ts","../src/hooks/useAdjacentImages.ts","../src/PhotoProvider.tsx","../src/PhotoView.tsx","../src/hooks/useInitial.ts"],"sourcesContent":["import { useRef } from 'react';\n\n/**\n * Hook of persistent methods\n */\nexport default function useMethods<T extends Record<string, (...args: any[]) => any>>(fn: T) {\n  const { current } = useRef({\n    fn,\n    curr: undefined as T | undefined,\n  });\n  current.fn = fn;\n\n  if (!current.curr) {\n    const curr = Object.create(null);\n    Object.keys(fn).forEach((key) => {\n      curr[key] = (...args: unknown[]) => current.fn[key].call(current.fn, ...args);\n    });\n    current.curr = curr;\n  }\n\n  return current.curr as T;\n}\n","import { useReducer } from 'react';\n\nexport default function useSetState<S extends Record<string, any>>(initialState: S) {\n  return useReducer(\n    (state: S, action: Partial<S> | ((state: S) => Partial<S>)) => ({\n      ...state,\n      ...(typeof action === 'function' ? action(state) : action),\n    }),\n    initialState,\n  );\n}\n","import { createContext } from 'react';\nimport type { DataType } from './types';\n\nexport type UpdateItemType = (dataType: DataType) => void;\n\nexport interface PhotoContextType {\n  show: (key: number) => void;\n  update: UpdateItemType;\n  remove: (key: number) => void;\n  nextId: () => number;\n}\n\nexport default createContext<PhotoContextType>(undefined as unknown as PhotoContextType);\n","/**\n * 是否支持触摸设备\n */\nconst isTouchDevice = typeof window !== 'undefined' && 'ontouchstart' in window;\n\nexport default isTouchDevice;\n","import { maxScale, minScale } from '../variables';\n\nexport const limitNumber = (value: number, min: number, max: number) => {\n  return Math.max(Math.min(value, max), min);\n};\n\n/**\n * 限制最大/最小缩放\n */\nexport const limitScale = (scale: number, max: number = 0, buffer: number = 0) => {\n  return limitNumber(scale, minScale * (1 - buffer), Math.max(maxScale, max) * (1 + buffer));\n};\n","/**\n * 最大触摸时间\n */\nexport const maxTouchTime = 200;\n\n/**\n * 默认动画速度\n */\nexport const defaultSpeed = 400;\n\n/**\n * 默认动画函数\n */\nexport const defaultEasing = 'cubic-bezier(0.25, 0.8, 0.25, 1)';\n\n/**\n * 最大滑动切换图片距离\n */\nexport const maxMoveOffset = 40;\n\n/**\n * 图片的间隔\n */\nexport const horizontalOffset = 20;\n\n/**\n * 最小初始响应距离\n */\nexport const minStartTouchOffset = 20;\n\n/**\n * 默认背景透明度\n */\nexport const defaultOpacity = 1;\n\n/**\n * 最小缩放度\n */\nexport const minScale = 1;\n\n/**\n * 最大缩放度（若图片足够大，则会超出）\n */\nexport const maxScale = 6;\n\n/**\n * 最小长图模式比例\n */\nexport const longModeRatio = 3;\n\n/**\n * 缩放弹性缓冲\n */\nexport const scaleBuffer = 0.2;\n\n/**\n * 最大等待动画时间\n */\nexport const maxWaitAnimationTime = 250;\n","import { useEffect, useLayoutEffect } from 'react';\n\nconst isSSR = typeof window === 'undefined' || /ServerSideRendering/.test(navigator && navigator.userAgent);\n\nexport default isSSR ? useEffect : useLayoutEffect;\n","import { useEffect, useRef } from 'react';\n\nexport default function useEventListener<K extends keyof WindowEventMap>(\n  type: K | undefined,\n  fn: (evt: WindowEventMap[K]) => void,\n  options?: AddEventListenerOptions,\n) {\n  const latest = useRef(fn);\n  latest.current = fn;\n\n  useEffect(() => {\n    function wrapper(evt: WindowEventMap[K]) {\n      latest.current(evt);\n    }\n    if (type) {\n      window.addEventListener(type, wrapper, options);\n    }\n    return () => {\n      if (type) {\n        window.removeEventListener(type, wrapper);\n      }\n    };\n  }, [type]);\n}\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport './SlidePortal.less';\n\nexport interface ISliderPortalProps extends React.HTMLAttributes<HTMLDivElement> {\n  container?: HTMLElement;\n}\n\nfunction SlidePortal({ container = document.body, ...rest }: ISliderPortalProps) {\n  return createPortal(<div {...rest} />, container);\n}\n\nexport default SlidePortal;\n","import React from 'react';\n\nfunction CloseIcon(props: React.HTMLAttributes<SVGElement>) {\n  return (\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\n      <path d=\"M607.5 205.5l-178.5 178.5 178.5 178.5-45 45-178.5-178.5-178.5 178.5-45-45 178.5-178.5-178.5-178.5 45-45 178.5 178.5 178.5-178.5z\" />\n    </svg>\n  );\n}\n\nexport default CloseIcon;\n","import React from 'react';\n\nfunction ArrowLeft(props: React.HTMLAttributes<SVGElement>) {\n  return (\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\n      <path d=\"M640.5 352.5v63h-390l178.5 180-45 45-256.5-256.5 256.5-256.5 45 45-178.5 180h390z\" />\n    </svg>\n  );\n}\n\nexport default ArrowLeft;\n","import React from 'react';\n\nfunction ArrowRight(props: React.HTMLAttributes<SVGElement>) {\n  return (\n    <svg width=\"44\" height=\"44\" viewBox=\"0 0 768 768\" {...props}>\n      <path d=\"M384 127.5l256.5 256.5-256.5 256.5-45-45 178.5-180h-390v-63h390l-178.5-180z\" />\n    </svg>\n  );\n}\n\nexport default ArrowRight;\n","import { useEffect } from 'react';\n\nexport default function PreventScroll() {\n  useEffect(() => {\n    const { style } = document.body;\n    const lastOverflow = style.overflow;\n    style.overflow = 'hidden';\n\n    return () => {\n      style.overflow = lastOverflow;\n    };\n  }, []);\n\n  return null;\n}\n","import type React from 'react';\n\n/**\n * 从 Touch 事件中获取两个触控中心位置\n */\nexport default function getMultipleTouchPosition(\n  evt: TouchEvent | React.TouchEvent,\n): [clientX: number, clientY: number, touchLength: number] {\n  const { clientX, clientY } = evt.touches[0];\n  if (evt.touches.length >= 2) {\n    const { clientX: nextClientX, clientY: nextClientY } = evt.touches[1];\n    return [\n      (clientX + nextClientX) / 2,\n      (clientY + nextClientY) / 2,\n      Math.sqrt((nextClientX - clientX) ** 2 + (nextClientY - clientY) ** 2),\n    ];\n  }\n  return [clientX, clientY, 0];\n}\n","import type { CloseEdgeType } from '../types';\nimport type { ReachType, TouchStartType } from '../types';\n\n/**\n * 获取接触边缘类型\n */\nexport const getReachType = (\n  initialTouchState: TouchStartType,\n  horizontalCloseEdge: CloseEdgeType,\n  verticalCloseEdge: CloseEdgeType,\n  reachPosition: ReachType,\n): ReachType => {\n  if ((horizontalCloseEdge && initialTouchState === 1) || reachPosition === 'x') {\n    return 'x';\n  } else if ((verticalCloseEdge && initialTouchState > 1) || reachPosition === 'y') {\n    return 'y';\n  }\n  return undefined;\n};\n\n/**\n * 计算接触边缘位置\n * @param position - x/y\n * @param scale\n * @param size - width/height\n * @param innerSize - innerWidth/innerHeight\n * @return [CloseEdgeType, position]\n */\nexport const computePositionEdge = (position: number, scale: number, size: number, innerSize: number) => {\n  const currentWidth = size * scale;\n  // 图片超出的宽度\n  const outOffset = (currentWidth - innerSize) / 2;\n  let closedEdge: CloseEdgeType = undefined;\n\n  let current = position;\n  if (currentWidth <= innerSize) {\n    closedEdge = 1;\n    current = 0;\n  } else if (position > 0 && outOffset - position <= 0) {\n    closedEdge = 2;\n    current = outOffset;\n  } else if (position < 0 && outOffset + position <= 0) {\n    closedEdge = 3;\n    current = -outOffset;\n  }\n\n  return [closedEdge, current] as const;\n};\n","import { longModeRatio } from '../variables';\nimport { computePositionEdge } from './edgeHandle';\n\n/**\n * 获取移动或缩放之后的中心点\n */\nexport default function getPositionOnMoveOrScale(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  scale: number,\n  toScale: number,\n  clientX: number = innerWidth / 2,\n  clientY: number = innerHeight / 2,\n  offsetX: number = 0,\n  offsetY: number = 0,\n) {\n  // 是否接触边缘\n  const [closedEdgeX] = computePositionEdge(x, toScale, width, innerWidth);\n  const [closedEdgeY] = computePositionEdge(y, toScale, height, innerHeight);\n\n  const centerClientX = innerWidth / 2;\n  const centerClientY = innerHeight / 2;\n\n  // 坐标偏移\n  const lastPositionX = centerClientX + x;\n  const lastPositionY = centerClientY + y;\n\n  // 偏移位置\n  const originX = clientX - (clientX - lastPositionX) * (toScale / scale) - centerClientX;\n  const originY = clientY - (clientY - lastPositionY) * (toScale / scale) - centerClientY;\n  // 长图模式无左右反馈\n  const longModeEdge = height / width >= longModeRatio && width * toScale === innerWidth;\n  // 超出边缘距离减半\n  return {\n    x: originX + (longModeEdge ? 0 : closedEdgeX ? offsetX / 2 : offsetX),\n    y: originY + (closedEdgeY ? offsetY / 2 : offsetY),\n    lastCX: clientX,\n    lastCY: clientY,\n  };\n}\n","/**\n * 获取旋转后的宽高\n */\nexport default function getRotateSize(rotate: number, width: number, height: number) {\n  const isVertical = rotate % 180 !== 0;\n\n  // 若图片不是水平则调换属性\n  if (isVertical) {\n    return [height, width, isVertical] as const;\n  }\n\n  return [width, height, isVertical] as const;\n}\n","import { longModeRatio } from '../variables';\nimport getRotateSize from './getRotateSize';\n\n/**\n * 获取图片合适的大小\n */\nexport default function getSuitableImageSize(naturalWidth: number, naturalHeight: number, rotate: number) {\n  const [currentWidth, currentHeight, isVertical] = getRotateSize(rotate, innerWidth, innerHeight);\n\n  let y = 0;\n  let width = currentWidth;\n  let height = currentHeight;\n\n  // 自适应宽高\n  const autoWidth = (naturalWidth / naturalHeight) * currentHeight;\n  const autoHeight = (naturalHeight / naturalWidth) * currentWidth;\n\n  if (naturalWidth < currentWidth && naturalHeight < currentHeight) {\n    width = naturalWidth;\n    height = naturalHeight;\n  } else if (naturalWidth < currentWidth && naturalHeight >= currentHeight) {\n    width = autoWidth;\n  } else if (naturalWidth >= currentWidth && naturalHeight < currentHeight) {\n    height = autoHeight;\n  } else if (naturalWidth / naturalHeight > currentWidth / currentHeight) {\n    height = autoHeight;\n  }\n  // 长图模式\n  else if (naturalHeight / naturalWidth >= longModeRatio && !isVertical) {\n    height = autoHeight;\n    y = (height - currentHeight) / 2;\n  } else {\n    width = autoWidth;\n  }\n  return {\n    width,\n    height,\n    x: 0,\n    y,\n    pause: true,\n  };\n}\n","import { useCallback, useRef } from 'react';\n\ninterface DebounceCallback<CallbackArguments extends any[]> {\n  (...args: CallbackArguments): void;\n  cancel: () => void;\n}\n\nexport default function useDebounceCallback<CallbackArguments extends any[]>(\n  callback: (...args: CallbackArguments) => void,\n  {\n    leading = false,\n    maxWait,\n    wait = maxWait || 0,\n  }: {\n    leading?: boolean;\n    maxWait?: number;\n    wait?: number;\n  },\n): DebounceCallback<CallbackArguments> {\n  const callbackRef = useRef(callback);\n  callbackRef.current = callback;\n\n  const prev = useRef(0);\n  const trailingTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  const fn = useCallback(\n    (...args: CallbackArguments) => {\n      const now = Date.now();\n\n      function call() {\n        prev.current = now;\n        clearTrailing();\n        callbackRef.current.apply(null, args);\n      }\n      const last = prev.current;\n      const offset = now - last;\n      // leading\n      if (last === 0) {\n        if (leading) {\n          call();\n        }\n        prev.current = now;\n      }\n\n      // body\n      if (maxWait !== undefined) {\n        if (offset > maxWait) {\n          call();\n          return;\n        }\n      } else if (offset < wait) {\n        prev.current = now;\n      }\n\n      // trailing\n      clearTrailing();\n      trailingTimeout.current = setTimeout(() => {\n        call();\n        prev.current = 0;\n      }, wait);\n    },\n    [wait, maxWait, leading],\n  );\n  (fn as DebounceCallback<CallbackArguments>).cancel = clearTrailing;\n\n  return fn as DebounceCallback<CallbackArguments>;\n}\n","import { computePositionEdge } from '../utils/edgeHandle';\nimport getPositionOnMoveOrScale from '../utils/getPositionOnMoveOrScale';\nimport getRotateSize from '../utils/getRotateSize';\nimport { defaultSpeed, maxTouchTime } from '../variables';\nimport useMethods from './useMethods';\n\n// 触边运动反馈\nconst rebound = (start: number, bound: number, callback: (spatial: number) => boolean) =>\n  easeOutMove(\n    start,\n    bound,\n    callback,\n    defaultSpeed / 4,\n    (t) => t,\n    () => easeOutMove(bound, start, callback),\n  );\n\n/**\n * 物理滚动到具体位置\n */\nexport default function useScrollPosition<C extends (spatial: number) => boolean>(\n  callbackX: C,\n  callbackY: C,\n  callbackS: C,\n) {\n  const callback = useMethods({\n    X: (spatial: number) => callbackX(spatial),\n    Y: (spatial: number) => callbackY(spatial),\n    S: (spatial: number) => callbackS(spatial),\n  });\n\n  return (\n    x: number,\n    y: number,\n    lastX: number,\n    lastY: number,\n    width: number,\n    height: number,\n    scale: number,\n    safeScale: number,\n    lastScale: number,\n    rotate: number,\n    touchedTime: number,\n  ) => {\n    const [currentWidth, currentHeight] = getRotateSize(rotate, width, height);\n    // 开始状态下边缘触发状态\n    const [beginEdgeX, beginX] = computePositionEdge(x, safeScale, currentWidth, innerWidth);\n    const [beginEdgeY, beginY] = computePositionEdge(y, safeScale, currentHeight, innerHeight);\n    const moveTime = Date.now() - touchedTime;\n\n    // 时间过长、超出安全范围的情况下不执行滚动逻辑，恢复安全范围\n    if (moveTime >= maxTouchTime || safeScale != scale || Math.abs(lastScale - scale) > 1) {\n      // 计算中心缩放点\n      const { x: nextX, y: nextY } = getPositionOnMoveOrScale(x, y, width, height, scale, safeScale);\n      const targetX = beginEdgeX ? beginX : nextX !== x ? nextX : null;\n      const targetY = beginEdgeY ? beginY : nextY !== y ? nextY : null;\n\n      if (targetX !== null) {\n        easeOutMove(x, targetX, callback.X);\n      }\n      if (targetY !== null) {\n        easeOutMove(y, targetY, callback.Y);\n      }\n      if (safeScale != scale) {\n        easeOutMove(scale, safeScale, callback.S);\n      }\n      return;\n    }\n\n    // 初始速度\n    const speedX = (x - lastX) / moveTime;\n    const speedY = (y - lastY) / moveTime;\n    const speedT = Math.sqrt(speedX ** 2 + speedY ** 2);\n    // 是否接触到边缘\n    let edgeX = false;\n    let edgeY = false;\n\n    scrollMove(speedT, (spatial) => {\n      const nextX = x + spatial * (speedX / speedT);\n      const nextY = y + spatial * (speedY / speedT);\n\n      const [isEdgeX, currentX] = computePositionEdge(nextX, scale, currentWidth, innerWidth);\n      const [isEdgeY, currentY] = computePositionEdge(nextY, scale, currentHeight, innerHeight);\n\n      if (isEdgeX && !edgeX) {\n        edgeX = true;\n        if (beginEdgeX) {\n          easeOutMove(nextX, currentX, callback.X);\n        } else {\n          rebound(currentX, nextX + (nextX - currentX), callback.X);\n        }\n      }\n\n      if (isEdgeY && !edgeY) {\n        edgeY = true;\n        if (beginEdgeY) {\n          easeOutMove(nextY, currentY, callback.Y);\n        } else {\n          rebound(currentY, nextY + (nextY - currentY), callback.Y);\n        }\n      }\n      // 同时接触边缘的情况下停止滚动\n      if (edgeX && edgeY) {\n        return false;\n      }\n\n      const resultX = edgeX || callback.X(currentX);\n      const resultY = edgeY || callback.Y(currentY);\n      return resultX && resultY;\n    });\n  };\n}\n\n// 加速度\nconst acceleration = -0.001;\n// 阻力\nconst resistance = 0.0002;\n\n/**\n * 通过速度滚动到停止\n */\nfunction scrollMove(initialSpeed: number, callback: (spatial: number) => boolean) {\n  let v = initialSpeed;\n  let s = 0;\n  let lastTime: number | undefined = undefined;\n  let frameId = 0;\n\n  const calcMove = (now: number) => {\n    if (!lastTime) {\n      lastTime = now;\n    }\n    const dt = now - lastTime;\n    const direction = Math.sign(initialSpeed);\n    const a = direction * acceleration;\n    const f = Math.sign(-v) * v ** 2 * resistance;\n    const ds = v * dt + ((a + f) * dt ** 2) / 2;\n    v = v + (a + f) * dt;\n\n    s = s + ds;\n    // move to s\n    lastTime = now;\n\n    if (direction * v <= 0) {\n      caf();\n      return;\n    }\n\n    if (callback(s)) {\n      raf();\n      return;\n    }\n    caf();\n  };\n  raf();\n\n  function raf() {\n    frameId = requestAnimationFrame(calcMove);\n  }\n  function caf() {\n    cancelAnimationFrame(frameId);\n  }\n}\n\n/**\n * 缓动函数\n */\nconst easeOutQuart = (x: number) => 1 - (1 - x) ** 4;\n\n/**\n * 缓动回调\n */\nfunction easeOutMove(\n  start: number,\n  end: number,\n  callback: (spatial: number) => boolean,\n  speed = defaultSpeed,\n  easing = easeOutQuart,\n  complete?: () => void,\n) {\n  const distance = end - start;\n  if (distance === 0) {\n    return;\n  }\n\n  const startTime = Date.now();\n  let frameId = 0;\n\n  const calcMove = () => {\n    const time = Math.min(1, (Date.now() - startTime) / speed);\n    const result = callback(start + easing(time) * distance);\n\n    if (result && time < 1) {\n      raf();\n      return;\n    }\n    cancelAnimationFrame(frameId);\n    if (time >= 1 && complete) {\n      complete();\n    }\n  };\n  raf();\n\n  function raf() {\n    frameId = requestAnimationFrame(calcMove);\n  }\n}\n","import type { Dispatch, MutableRefObject, SetStateAction } from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport type { EasingMode, OriginRectType } from '../types';\nimport useMethods from './useMethods';\nimport { maxWaitAnimationTime } from '../variables';\n\nconst initialRect: OriginRectType = {\n  T: 0,\n  L: 0,\n  W: 0,\n  H: 0,\n  // 图像填充方式\n  FIT: undefined,\n};\n\nexport default function useAnimationOrigin(\n  visible: boolean | undefined,\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  loaded: boolean,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n): [\n  // 动画状态\n  easingMode: EasingMode,\n  originRect: OriginRectType,\n] {\n  const [originRect, updateOriginRect] = useState(initialRect);\n  // 动画状态\n  const [easingMode, updateEasingMode] = useState<EasingMode>(0);\n  const initialTime = useRef<number>();\n\n  const fn = useMethods({\n    OK: () => visible && updateEasingMode(4),\n  });\n\n  useEffect(() => {\n    // 记录初始打开的时间\n    if (!initialTime.current) {\n      initialTime.current = Date.now();\n    }\n    if (!loaded) {\n      return;\n    }\n    handleUpdateOrigin(originRef, updateOriginRect);\n    // 打开动画处理\n    if (visible) {\n      // 小于最大允许动画时间，则执行缩放动画\n      if (Date.now() - initialTime.current < maxWaitAnimationTime) {\n        updateEasingMode(1);\n        // 延时执行动画，保持 transition 生效\n        requestAnimationFrame(() => {\n          updateEasingMode(2);\n          requestAnimationFrame(() => handleToShape(3));\n        });\n        setTimeout(fn.OK, speed);\n        return;\n      }\n      // 超出则不执行\n      updateEasingMode(4);\n      return;\n    }\n    // 关闭动画处理\n    handleToShape(5);\n  }, [visible, loaded]);\n\n  function handleToShape(currentShape: EasingMode) {\n    updateEasing(false);\n    updateEasingMode(currentShape);\n  }\n\n  return [easingMode, originRect];\n}\n\n/**\n * 更新缩略图位置信息\n */\nfunction handleUpdateOrigin(\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  updateOriginRect: Dispatch<SetStateAction<typeof initialRect>>,\n) {\n  const element = originRef && originRef.current;\n\n  if (element && element.nodeType === 1) {\n    // 获取触发时节点位置\n    const { top, left, width, height } = element.getBoundingClientRect();\n    const isImage = element.tagName === 'IMG';\n    updateOriginRect({\n      T: top,\n      L: left,\n      W: width,\n      H: height,\n      FIT: isImage ? (getComputedStyle(element).objectFit as 'contain' | 'cover' | 'fill' | undefined) : undefined,\n    });\n  }\n}\n","import { useEffect, useRef } from 'react';\n\nconst useMountedRef = () => {\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n};\n\nexport default useMountedRef;\n","import React from 'react';\nimport './Spinner.less';\n\nfunction Spinner({ className, ...props }: React.HTMLAttributes<HTMLElement>) {\n  return (\n    <div className={`PhotoView__Spinner ${className}`} {...props}>\n      <svg viewBox=\"0 0 32 32\" width=\"36\" height=\"36\" fill=\"white\">\n        <path opacity=\".25\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\" />\n        <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport Spinner from './components/Spinner';\nimport useMountedRef from './hooks/useMountedRef';\nimport type { BrokenElementParams } from './types';\nimport './Photo.less';\n\nexport interface IPhotoLoadedParams {\n  loaded?: boolean;\n  naturalWidth?: number;\n  naturalHeight?: number;\n  broken?: boolean;\n}\n\nexport interface IPhotoProps extends React.HTMLAttributes<HTMLElement> {\n  src: string;\n  loaded: boolean;\n  broken: boolean;\n  onPhotoLoad: (params: IPhotoLoadedParams) => void;\n  loadingElement?: JSX.Element;\n  brokenElement?: JSX.Element | ((photoProps: BrokenElementParams) => JSX.Element);\n}\n\nexport default function Photo({\n  src,\n  loaded,\n  broken,\n  className,\n  onPhotoLoad,\n  loadingElement,\n  brokenElement,\n  ...restProps\n}: IPhotoProps) {\n  const mountedRef = useMountedRef();\n\n  function handleImageLoaded(e: React.SyntheticEvent<HTMLImageElement>) {\n    const { naturalWidth, naturalHeight } = e.target as HTMLImageElement;\n    if (mountedRef.current) {\n      onPhotoLoad({\n        loaded: true,\n        naturalWidth,\n        naturalHeight,\n      });\n    }\n  }\n\n  function handleImageBroken() {\n    if (mountedRef.current) {\n      onPhotoLoad({\n        broken: true,\n      });\n    }\n  }\n\n  if (src && !broken) {\n    return (\n      <>\n        <img\n          className={`PhotoView__Photo${className ? ` ${className}` : ''}`}\n          src={src}\n          onLoad={handleImageLoaded}\n          onError={handleImageBroken}\n          alt=\"\"\n          {...restProps}\n        />\n        {!loaded &&\n          (<span className=\"PhotoView__icon\">{loadingElement}</span> || <Spinner className=\"PhotoView__icon\" />)}\n      </>\n    );\n  }\n\n  if (brokenElement) {\n    return (\n      <span className=\"PhotoView__icon\">\n        {typeof brokenElement === 'function' ? brokenElement({ src }) : brokenElement}\n      </span>\n    );\n  }\n\n  return null;\n}\n","import React, { useRef } from 'react';\nimport isTouchDevice from './utils/isTouchDevice';\nimport getMultipleTouchPosition from './utils/getMultipleTouchPosition';\nimport getPositionOnMoveOrScale from './utils/getPositionOnMoveOrScale';\nimport { getReachType, computePositionEdge } from './utils/edgeHandle';\nimport getRotateSize from './utils/getRotateSize';\nimport { limitScale } from './utils/limitTarget';\nimport getSuitableImageSize from './utils/getSuitableImageSize';\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect';\nimport { minStartTouchOffset, scaleBuffer } from './variables';\nimport type {\n  DataType,\n  ReachMoveFunction,\n  ReachFunction,\n  PhotoTapFunction,\n  BrokenElementParams,\n  ExposedProperties,\n} from './types';\nimport type { ReachType, TouchStartType } from './types';\nimport useSetState from './hooks/useSetState';\nimport useMethods from './hooks/useMethods';\nimport useDebounceCallback from './hooks/useDebounceCallback';\nimport useEventListener from './hooks/useEventListener';\nimport useContinuousTap from './hooks/useContinuousTap';\nimport useScrollPosition from './hooks/useScrollPosition';\nimport useAnimationPosition from './hooks/useAnimationPosition';\nimport useMountedRef from './hooks/useMountedRef';\nimport type { IPhotoLoadedParams } from './Photo';\nimport Photo from './Photo';\nimport './PhotoBox.less';\n\nexport interface PhotoBoxProps {\n  // 图片信息\n  item: DataType;\n  // 是否可见\n  visible: boolean;\n  // 动画时间\n  speed: number;\n  // 动画函数\n  easing: string;\n  // 容器类名\n  wrapClassName?: string;\n  // 图片类名\n  className?: string;\n  // style\n  style?: object;\n  // 自定义 loading\n  loadingElement?: JSX.Element;\n  // 加载失败 Element\n  brokenElement?: JSX.Element | ((photoProps: BrokenElementParams) => JSX.Element);\n\n  // Photo 点击事件\n  onPhotoTap: PhotoTapFunction;\n  // Mask 点击事件\n  onMaskTap: PhotoTapFunction;\n  // 到达边缘滑动事件\n  onReachMove: ReachMoveFunction;\n  // 触摸解除事件\n  onReachUp: ReachFunction;\n  // Resize 事件\n  onPhotoResize: () => void;\n  // 向父组件导出属性\n  expose: (state: ExposedProperties) => void;\n  // 是否在当前操作中\n  isActive: boolean;\n}\n\nconst initialState = {\n  // 真实宽度\n  naturalWidth: undefined as number | undefined,\n  // 真实高度\n  naturalHeight: undefined as number | undefined,\n  // 宽度\n  width: undefined as number | undefined,\n  // 高度\n  height: undefined as number | undefined,\n  // 加载成功状态\n  loaded: undefined as boolean | undefined,\n  // 破碎状态\n  broken: false,\n\n  // 图片 X 偏移量\n  x: 0,\n  // 图片 y 偏移量\n  y: 0,\n  // 图片处于触摸的状态\n  touched: false,\n  // 背景处于触摸状态\n  maskTouched: false,\n  // 旋转状态\n  rotate: 0,\n  // 放大缩小\n  scale: 1,\n\n  // 触摸开始时 x 原始坐标\n  CX: 0,\n  // 触摸开始时 y 原始坐标\n  CY: 0,\n\n  // 触摸开始时图片 x 偏移量\n  lastX: 0,\n  // 触摸开始时图片 y 偏移量\n  lastY: 0,\n  // 上一个触摸状态 x 原始坐标\n  lastCX: 0,\n  // 上一个触摸状态 y 原始坐标\n  lastCY: 0,\n  // 上一个触摸状态的 scale\n  lastScale: 1,\n\n  // 触摸开始时时间\n  touchTime: 0,\n  // 多指触控间距\n  touchLength: 0,\n  // 是否暂停 transition\n  pause: true,\n  // 停止 Raf\n  stopRaf: true,\n  // 当前边缘触发状态\n  reach: undefined as ReachType,\n};\n\nexport default function PhotoBox({\n  item: { src, render, width: customWidth = 0, height: customHeight = 0, originRef },\n  visible,\n  speed,\n  easing,\n  wrapClassName,\n  className,\n  style,\n  loadingElement,\n  brokenElement,\n\n  onPhotoTap,\n  onMaskTap,\n  onReachMove,\n  onReachUp,\n  onPhotoResize,\n  isActive,\n  expose,\n}: PhotoBoxProps) {\n  const [state, updateState] = useSetState(initialState);\n  const initialTouchRef = useRef<TouchStartType>(0);\n  const mounted = useMountedRef();\n\n  const {\n    naturalWidth = customWidth,\n    naturalHeight = customHeight,\n    width = customWidth,\n    height = customHeight,\n    loaded = !src,\n    broken,\n    x,\n    y,\n    touched,\n    stopRaf,\n    maskTouched,\n    rotate,\n    scale,\n    CX,\n    CY,\n    lastX,\n    lastY,\n    lastCX,\n    lastCY,\n    lastScale,\n    touchTime,\n    touchLength,\n    pause,\n    reach,\n  } = state;\n\n  const fn = useMethods({\n    onScale: (current: number) => onScale(limitScale(current)),\n    onRotate(current: number) {\n      if (rotate !== current) {\n        expose({ rotate: current });\n        updateState({ rotate: current, ...getSuitableImageSize(naturalWidth, naturalHeight, current) });\n      }\n    },\n  });\n\n  // 默认为屏幕中心缩放\n  function onScale(current: number, clientX?: number, clientY?: number) {\n    if (scale !== current) {\n      expose({ scale: current });\n      updateState({\n        scale: current,\n        ...getPositionOnMoveOrScale(x, y, width, height, scale, current, clientX, clientY),\n        ...(current <= 1 && { x: 0, y: 0 }),\n      });\n    }\n  }\n\n  const handleMove = useDebounceCallback(\n    (nextClientX: number, nextClientY: number, currentTouchLength: number = 0) => {\n      if ((touched || maskTouched) && isActive) {\n        // 通过旋转调换宽高\n        const [currentWidth, currentHeight] = getRotateSize(rotate, width, height);\n        // 单指最小缩放下，以初始移动距离来判断意图\n        if (currentTouchLength === 0 && initialTouchRef.current === 0) {\n          const isStillX = Math.abs(nextClientX - CX) <= minStartTouchOffset;\n          const isStillY = Math.abs(nextClientY - CY) <= minStartTouchOffset;\n          // 初始移动距离不足\n          if (isStillX && isStillY) {\n            // 方向记录上次移动距离，以便平滑过渡\n            updateState({ lastCX: nextClientX, lastCY: nextClientY });\n            return;\n          }\n          // 设置响应状态\n          initialTouchRef.current = !isStillX ? 1 : nextClientY > CY ? 3 : 2;\n        }\n\n        const offsetX = nextClientX - lastCX;\n        const offsetY = nextClientY - lastCY;\n        // 边缘触发状态\n        let currentReach: ReachType = undefined;\n        if (currentTouchLength === 0) {\n          // 边缘超出状态\n          const [horizontalCloseEdge] = computePositionEdge(offsetX + lastX, scale, currentWidth, innerWidth);\n          const [verticalCloseEdge] = computePositionEdge(offsetY + lastY, scale, currentHeight, innerHeight);\n          // 边缘触发检测\n          currentReach = getReachType(initialTouchRef.current, horizontalCloseEdge, verticalCloseEdge, reach);\n\n          // 接触边缘\n          if (currentReach !== undefined) {\n            onReachMove(currentReach, nextClientX, nextClientY, scale);\n          }\n        }\n        // 横向边缘触发、背景触发禁用当前滑动\n        if (currentReach === 'x' || maskTouched) {\n          updateState({ reach: 'x' });\n          return;\n        }\n        // 目标倍数\n        const toScale = limitScale(\n          scale + ((currentTouchLength - touchLength) / 100 / 2) * scale,\n          naturalWidth / width,\n          scaleBuffer,\n        );\n        // 导出变量\n        expose({ scale: toScale });\n        updateState({\n          touchLength: currentTouchLength,\n          reach: currentReach,\n          scale: toScale,\n          ...getPositionOnMoveOrScale(x, y, width, height, scale, toScale, nextClientX, nextClientY, offsetX, offsetY),\n        });\n      }\n    },\n    {\n      maxWait: 8,\n    },\n  );\n\n  function updateRaf(position: { x?: number; y?: number }) {\n    if (stopRaf || touched) {\n      return false;\n    }\n    if (mounted.current) {\n      // 下拉关闭时可以有动画\n      updateState({ ...position, pause: visible });\n    }\n    return mounted.current;\n  }\n\n  const slideToPosition = useScrollPosition(\n    (nextX) => updateRaf({ x: nextX }),\n    (nextY) => updateRaf({ y: nextY }),\n    (nextScale) => {\n      if (mounted.current) {\n        expose({ scale: nextScale });\n        updateState({ scale: nextScale });\n      }\n      return !touched && mounted.current;\n    },\n  );\n\n  const handlePhotoTap = useContinuousTap(onPhotoTap, (currentClientX: number, currentClientY: number) => {\n    if (!reach) {\n      // 若图片足够大，则放大适应的倍数\n      const endScale = scale !== 1 ? 1 : Math.max(2, naturalWidth / width);\n      onScale(endScale, currentClientX, currentClientY);\n    }\n  });\n\n  function handleUp(nextClientX: number, nextClientY: number) {\n    // 重置响应状态\n    initialTouchRef.current = 0;\n    if ((touched || maskTouched) && isActive) {\n      updateState({\n        touched: false,\n        maskTouched: false,\n        pause: false,\n        stopRaf: false,\n        reach: undefined,\n      });\n      const safeScale = limitScale(scale, naturalWidth / width);\n      // Go\n      slideToPosition(x, y, lastX, lastY, width, height, scale, safeScale, lastScale, rotate, touchTime);\n\n      onReachUp(nextClientX, nextClientY);\n      // 触发 Tap 事件\n      if (CX === nextClientX && CY === nextClientY) {\n        if (touched) {\n          handlePhotoTap(nextClientX, nextClientY);\n          return;\n        }\n        if (maskTouched) {\n          onMaskTap(nextClientX, nextClientY);\n        }\n      }\n    }\n  }\n\n  useEventListener(isTouchDevice ? undefined : 'mousemove', (e) => {\n    e.preventDefault();\n    handleMove(e.clientX, e.clientY);\n  });\n  useEventListener(isTouchDevice ? undefined : 'mouseup', (e) => {\n    handleUp(e.clientX, e.clientY);\n  });\n  useEventListener(\n    isTouchDevice ? 'touchmove' : undefined,\n    (e) => {\n      e.preventDefault();\n      const position = getMultipleTouchPosition(e);\n      handleMove(...position);\n    },\n    { passive: false },\n  );\n  useEventListener(\n    isTouchDevice ? 'touchend' : undefined,\n    ({ changedTouches }) => {\n      const touch = changedTouches[0];\n      handleUp(touch.clientX, touch.clientY);\n    },\n    { passive: false },\n  );\n  useEventListener(\n    'resize',\n    useDebounceCallback(\n      () => {\n        if (loaded && !touched) {\n          updateState(getSuitableImageSize(naturalWidth, naturalHeight, rotate));\n          onPhotoResize();\n        }\n      },\n      { maxWait: 8 },\n    ),\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (isActive) {\n      expose({ scale, rotate, ...fn });\n    }\n  }, [isActive]);\n\n  function handlePhotoLoad(params: IPhotoLoadedParams) {\n    updateState({\n      ...params,\n      ...(params.loaded && getSuitableImageSize(params.naturalWidth || 0, params.naturalHeight || 0, rotate)),\n    });\n  }\n\n  function handleStart(currentClientX: number, currentClientY: number, currentTouchLength: number = 0) {\n    updateState({\n      touched: true,\n      CX: currentClientX,\n      CY: currentClientY,\n      lastCX: currentClientX,\n      lastCY: currentClientY,\n      lastX: x,\n      lastY: y,\n      lastScale: scale,\n      touchLength: currentTouchLength,\n      touchTime: Date.now(),\n    });\n  }\n\n  function handleWheel(e: React.WheelEvent) {\n    if (!reach) {\n      // 限制最大倍数和最小倍数\n      const toScale = limitScale(scale - e.deltaY / 100 / 2, naturalWidth / width);\n      updateState({ stopRaf: true });\n      onScale(toScale, e.clientX, e.clientY);\n    }\n  }\n\n  function handleMaskStart(e: { clientX: number; clientY: number }) {\n    updateState({\n      maskTouched: true,\n      CX: e.clientX,\n      CY: e.clientY,\n      lastX: x,\n      lastY: y,\n    });\n  }\n\n  function handleTouchStart(e: React.TouchEvent) {\n    e.stopPropagation();\n    handleStart(...getMultipleTouchPosition(e));\n  }\n\n  function handleMouseDown(e: React.MouseEvent) {\n    e.stopPropagation();\n    if (e.button === 0) {\n      handleStart(e.clientX, e.clientY, 0);\n    }\n  }\n\n  // 计算位置\n  const [translateX, translateY, currentWidth, currentHeight, currentScale, opacity, easingMode, FIT] =\n    useAnimationPosition(visible, originRef, loaded, x, y, width, height, scale, speed, (isPause: boolean) =>\n      updateState({ pause: isPause }),\n    );\n  // 图片 objectFit 渐变时间\n  const transitionLayoutTime = easingMode < 4 ? speed / 2 : easingMode > 4 ? speed : 0;\n  const transitionCSS = `transform ${speed}ms ${easing}`;\n\n  const attrs = {\n    className,\n    onMouseDown: isTouchDevice ? undefined : handleMouseDown,\n    onTouchStart: isTouchDevice ? handleTouchStart : undefined,\n    onWheel: handleWheel,\n    style: {\n      width: currentWidth,\n      height: currentHeight,\n      opacity,\n      objectFit: easingMode === 4 ? undefined : FIT,\n      transform: rotate ? `rotate(${rotate}deg)` : undefined,\n      transition:\n        // 初始状态无渐变\n        easingMode > 2\n          ? `${transitionCSS}, opacity ${speed}ms ease, height ${transitionLayoutTime}ms ${easing}`\n          : undefined,\n    },\n  };\n\n  return (\n    <div\n      className={`PhotoView__PhotoWrap${wrapClassName ? ` ${wrapClassName}` : ''}`}\n      style={style}\n      onMouseDown={!isTouchDevice && isActive ? handleMaskStart : undefined}\n      onTouchStart={isTouchDevice && isActive ? (e) => handleMaskStart(e.touches[0]) : undefined}\n    >\n      <div\n        className=\"PhotoView__PhotoBox\"\n        style={{\n          transform: `matrix(${currentScale}, 0, 0, ${currentScale}, ${translateX}, ${translateY})`,\n          transition: touched || pause ? undefined : transitionCSS,\n          willChange: isActive ? 'transform' : undefined,\n        }}\n      >\n        {src ? (\n          <Photo\n            src={src}\n            loaded={loaded}\n            broken={broken}\n            {...attrs}\n            onPhotoLoad={handlePhotoLoad}\n            loadingElement={loadingElement}\n            brokenElement={brokenElement}\n          />\n        ) : (\n          render && render({ attrs, scale: currentScale, rotate })\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useRef } from 'react';\nimport useDebounceCallback from './useDebounceCallback';\n\nexport type TapFuncType<T> = (...args: T[]) => void;\n\n/**\n * 单击和双击事件处理\n * @param singleTap - 单击事件\n * @param doubleTap - 双击事件\n * @return invokeTap\n */\nexport default function useContinuousTap<T>(singleTap: TapFuncType<T>, doubleTap: TapFuncType<T>): TapFuncType<T> {\n  // 当前连续点击次数\n  const continuousClick = useRef(0);\n\n  const debounceTap = useDebounceCallback(\n    (...args) => {\n      continuousClick.current = 0;\n      singleTap(...args);\n    },\n    {\n      wait: 300,\n    },\n  );\n\n  return function invokeTap(...args) {\n    continuousClick.current += 1;\n    debounceTap(...args);\n    // 双击\n    if (continuousClick.current >= 2) {\n      debounceTap.cancel();\n      continuousClick.current = 0;\n      doubleTap(...args);\n    }\n  };\n}\n","import type { MutableRefObject } from 'react';\nimport useAnimationOrigin from './useAnimationOrigin';\nimport useTargetScale from './useTargetScale';\n\nexport default function useAnimationPosition(\n  visible: boolean | undefined,\n  originRef: MutableRefObject<HTMLElement | null> | undefined,\n  loaded: boolean,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  scale: number,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n) {\n  // 延迟更新 width/height\n  const [autoWidth, autoHeight, autoScale] = useTargetScale(width, height, scale, speed, updateEasing);\n  // 动画源处理\n  const [easingMode, originRect] = useAnimationOrigin(visible, originRef, loaded, speed, updateEasing);\n\n  // 计算动画位置\n  const { T, L, W, H, FIT } = originRect;\n  // 偏移量，x: 0, y: 0 居中为初始\n  const centerWidth = innerWidth / 2;\n  const centerHeight = innerHeight / 2;\n  const offsetX = centerWidth - (width * scale) / 2;\n  const offsetY = centerHeight - (height * scale) / 2;\n  // 缩略图状态\n  const miniMode = easingMode < 3 || easingMode > 4;\n  // 有缩略图时，则为缩略图的位置，否则居中\n  const translateX = miniMode ? (W ? L : centerWidth) : x + offsetX;\n  const translateY = miniMode ? (W ? T : centerHeight) : y + offsetY;\n\n  // 最小值缩放\n  const minScale = W / (width * scale) || 0.01;\n\n  // 适应 objectFit 保持缩略图宽高比\n  const currentHeight = miniMode && FIT ? autoWidth * (H / W) : autoHeight;\n  // 初始加载情况无缩放\n  const currentScale = easingMode === 0 ? autoScale : miniMode ? minScale : autoScale;\n  const opacity = miniMode ? (FIT ? 1 : 0) : 1;\n\n  return [translateX, translateY, autoWidth, currentHeight, currentScale, opacity, easingMode, FIT] as const;\n}\n","import { useRef } from 'react';\nimport useSetState from './useSetState';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport useDebounceCallback from './useDebounceCallback';\n\n/**\n * 目标缩放延迟处理\n */\nexport default function useTargetScale(\n  realWidth: number,\n  realHeight: number,\n  realScale: number,\n  speed: number,\n  updateEasing: (pause: boolean) => void,\n) {\n  const execRef = useRef(false);\n\n  const [{ lead, scale }, updateState] = useSetState({ lead: true, scale: realScale });\n\n  const moveScale = useDebounceCallback(\n    async (current: number) => {\n      updateEasing(true);\n      updateState({ lead: false, scale: current });\n    },\n    { wait: speed },\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (!execRef.current) {\n      execRef.current = true;\n      return;\n    }\n    updateEasing(false);\n    updateState({ lead: true });\n\n    moveScale(realScale);\n  }, [realScale]);\n\n  // 运动开始\n  if (lead) {\n    return [realWidth * scale, realHeight * scale, realScale / scale] as const;\n  }\n\n  // 运动结束\n  return [realWidth * realScale, realHeight * realScale, 1] as const;\n}\n","import React, { useRef, useState } from 'react';\nimport type { DataType, PhotoProviderBase, OverlayRenderProps } from './types';\nimport type { ReachType } from './types';\nimport { defaultEasing, defaultSpeed, defaultOpacity, horizontalOffset, maxMoveOffset } from './variables';\nimport isTouchDevice from './utils/isTouchDevice';\nimport { limitNumber } from './utils/limitTarget';\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect';\nimport useAdjacentImages from './hooks/useAdjacentImages';\nimport useSetState from './hooks/useSetState';\nimport useEventListener from './hooks/useEventListener';\nimport useAnimationVisible from './hooks/useAnimationVisible';\nimport useMethods from './hooks/useMethods';\nimport SlidePortal from './components/SlidePortal';\nimport CloseIcon from './components/CloseIcon';\nimport ArrowLeft from './components/ArrowLeft';\nimport ArrowRight from './components/ArrowRight';\nimport PreventScroll from './components/PreventScroll';\nimport PhotoBox from './PhotoBox';\nimport './PhotoSlider.less';\n\nexport interface IPhotoSliderProps extends PhotoProviderBase {\n  // 图片列表\n  images: DataType[];\n  // 图片当前索引\n  index?: number;\n  // 索引改变回调\n  onIndexChange?: (index: number) => void;\n  // 可见\n  visible: boolean;\n  // 关闭回调\n  onClose: (evt?: React.MouseEvent | React.TouchEvent) => void;\n  // 关闭动画结束后回调\n  afterClose?: () => void;\n}\n\ntype PhotoSliderState = {\n  // 偏移量\n  x: number;\n  // 图片处于触摸的状态\n  touched: boolean;\n  // 是否暂停 transition\n  pause: boolean;\n  // Reach 开始时 x 坐标\n  lastCX: number | undefined;\n  // Reach 开始时 y 坐标\n  lastCY: number | undefined;\n  // 背景透明度\n  bg: number | null | undefined;\n  // 上次关闭的背景透明度\n  lastBg: number | null | undefined;\n  // 是否显示 overlay\n  overlay: boolean;\n  // 是否为最小状态，可下拉关闭\n  minimal: boolean;\n  // 缩放\n  scale: number;\n  // 旋转\n  rotate: number;\n  // 缩放回调\n  onScale?: (scale: number) => void;\n  // 旋转回调\n  onRotate?: (rotate: number) => void;\n};\n\nconst initialState: PhotoSliderState = {\n  x: 0,\n  touched: false,\n  pause: false,\n  lastCX: undefined,\n  lastCY: undefined,\n  bg: undefined,\n  lastBg: undefined,\n  overlay: true,\n  minimal: true,\n  scale: 1,\n  rotate: 0,\n};\n\nexport default function PhotoSlider(props: IPhotoSliderProps) {\n  const {\n    loop = 3,\n    speed: speedFn,\n    easing: easingFn,\n    photoClosable,\n    maskClosable = true,\n    maskOpacity = defaultOpacity,\n    pullClosable = true,\n    bannerVisible = true,\n    overlayRender,\n    toolbarRender,\n    className,\n    maskClassName,\n    photoClassName,\n    photoWrapClassName,\n    loadingElement,\n    brokenElement,\n    images,\n    index: controlledIndex = 0,\n    onIndexChange: controlledIndexChange,\n    visible,\n    onClose,\n    afterClose,\n    portalContainer,\n  } = props;\n\n  const [state, updateState] = useSetState(initialState);\n  const [innerIndex, updateInnerIndex] = useState(0);\n\n  const {\n    x,\n    touched,\n    pause,\n\n    lastCX,\n    lastCY,\n\n    bg = maskOpacity,\n    lastBg,\n    overlay,\n    minimal,\n\n    scale,\n    rotate,\n    onScale,\n    onRotate,\n  } = state;\n\n  // 受控 index\n  const isControlled = props.hasOwnProperty('index');\n  const index = isControlled ? controlledIndex : innerIndex;\n  const onIndexChange = isControlled ? controlledIndexChange : updateInnerIndex;\n  // 内部虚拟 index\n  const virtualIndexRef = useRef(index);\n\n  // 当前图片\n  const imageLength = images.length;\n  const currentImage: DataType | undefined = images[index];\n\n  // 是否开启\n  // noinspection SuspiciousTypeOfGuard\n  const enableLoop = typeof loop === 'boolean' ? loop : imageLength > loop;\n\n  // 显示动画处理\n  const [realVisible, activeAnimation, onAnimationEnd] = useAnimationVisible(visible, afterClose);\n\n  useIsomorphicLayoutEffect(() => {\n    // 显示弹出层，修正正确的指向\n    if (realVisible) {\n      updateState({\n        pause: true,\n        x: index * -(innerWidth + horizontalOffset),\n      });\n      virtualIndexRef.current = index;\n      return;\n    }\n    // 关闭后清空状态\n    updateState(initialState);\n  }, [realVisible]);\n\n  const { close, changeIndex } = useMethods({\n    close(evt?: React.MouseEvent | React.TouchEvent) {\n      if (onRotate) {\n        onRotate(0);\n      }\n      updateState({\n        overlay: true,\n        // 记录当前关闭时的透明度\n        lastBg: bg,\n      });\n      onClose(evt);\n    },\n    changeIndex(nextIndex: number, isPause: boolean = false) {\n      // 当前索引\n      const currentIndex = enableLoop ? virtualIndexRef.current + (nextIndex - index) : nextIndex;\n      const max = imageLength - 1;\n      // 虚拟 index\n      // 非循环模式，限制区间\n      const limitIndex = limitNumber(currentIndex, 0, max);\n      const nextVirtualIndex = enableLoop ? currentIndex : limitIndex;\n      // 单个屏幕宽度\n      const singlePageWidth = innerWidth + horizontalOffset;\n\n      updateState({\n        touched: false,\n        lastCX: undefined,\n        lastCY: undefined,\n        x: -singlePageWidth * nextVirtualIndex,\n        pause: isPause,\n      });\n\n      virtualIndexRef.current = nextVirtualIndex;\n      // 更新真实的 index\n      const realLoopIndex = nextIndex < 0 ? max : nextIndex > max ? 0 : nextIndex;\n      if (onIndexChange) {\n        onIndexChange(enableLoop ? realLoopIndex : limitIndex);\n      }\n    },\n  });\n\n  useEventListener('keydown', (evt: KeyboardEvent) => {\n    if (visible) {\n      switch (evt.key) {\n        case 'ArrowLeft':\n          changeIndex(index - 1, true);\n          break;\n        case 'ArrowRight':\n          changeIndex(index + 1, true);\n          break;\n        case 'Escape':\n          close();\n          break;\n      }\n    }\n  });\n\n  function handlePhotoTap(closeable: boolean | undefined) {\n    return closeable ? close() : updateState({ overlay: !overlay });\n  }\n\n  function handleResize() {\n    updateState({\n      x: -(innerWidth + horizontalOffset) * index,\n      lastCX: undefined,\n      lastCY: undefined,\n      pause: true,\n    });\n    virtualIndexRef.current = index;\n  }\n\n  function handleReachVerticalMove(clientY: number, nextScale?: number) {\n    if (lastCY === undefined) {\n      updateState({\n        touched: true,\n        lastCY: clientY,\n        bg,\n        minimal: true,\n      });\n      return;\n    }\n    const opacity =\n      maskOpacity === null ? null : limitNumber(maskOpacity, 0.01, maskOpacity - Math.abs(clientY - lastCY) / 100 / 4);\n\n    updateState({\n      touched: true,\n      lastCY,\n      bg: nextScale === 1 ? opacity : maskOpacity,\n      minimal: nextScale === 1,\n    });\n  }\n\n  function handleReachHorizontalMove(clientX: number) {\n    if (lastCX === undefined) {\n      updateState({\n        touched: true,\n        lastCX: clientX,\n        x,\n        pause: false,\n      });\n      return;\n    }\n    const originOffsetClientX = clientX - lastCX;\n    let offsetClientX = originOffsetClientX;\n\n    // 第一张和最后一张超出距离减半\n    if (\n      !enableLoop &&\n      ((index === 0 && originOffsetClientX > 0) || (index === imageLength - 1 && originOffsetClientX < 0))\n    ) {\n      offsetClientX = originOffsetClientX / 2;\n    }\n\n    updateState({\n      touched: true,\n      lastCX: lastCX,\n      x: -(innerWidth + horizontalOffset) * virtualIndexRef.current + offsetClientX,\n      pause: false,\n    });\n  }\n\n  function handleReachMove(reachPosition: ReachType, clientX: number, clientY: number, nextScale?: number) {\n    if (reachPosition === 'x') {\n      handleReachHorizontalMove(clientX);\n    } else if (reachPosition === 'y') {\n      handleReachVerticalMove(clientY, nextScale);\n    }\n  }\n\n  function handleReachUp(clientX: number, clientY: number) {\n    const offsetClientX = clientX - (lastCX ?? clientX);\n    const offsetClientY = clientY - (lastCY ?? clientY);\n    let willClose = false;\n    // 下一张\n    if (offsetClientX < -maxMoveOffset) {\n      changeIndex(index + 1);\n      return;\n    }\n    // 上一张\n    if (offsetClientX > maxMoveOffset) {\n      changeIndex(index - 1);\n      return;\n    }\n    const singlePageWidth = innerWidth + horizontalOffset;\n    // 当前偏移\n    const currentTranslateX = -singlePageWidth * virtualIndexRef.current;\n\n    if (Math.abs(offsetClientY) > 100 && minimal && pullClosable) {\n      willClose = true;\n      close();\n    }\n    updateState({\n      touched: false,\n      x: currentTranslateX,\n      lastCX: undefined,\n      lastCY: undefined,\n      bg: maskOpacity,\n      overlay: willClose ? true : overlay,\n    });\n  }\n  // 截取相邻的图片\n  const adjacentImages = useAdjacentImages(images, index, enableLoop);\n\n  if (!realVisible) {\n    return null;\n  }\n\n  const currentOverlayVisible = overlay && !activeAnimation;\n  // 关闭过程中使用下拉保存的透明度\n  const currentOpacity = visible ? bg : lastBg;\n  // 覆盖物参数\n  const overlayParams: OverlayRenderProps | undefined = onScale &&\n    onRotate && {\n      images,\n      index,\n      visible,\n      onClose: close,\n      onIndexChange: changeIndex,\n      overlayVisible: currentOverlayVisible,\n      overlay: currentImage && currentImage.overlay,\n      scale,\n      rotate,\n      onScale,\n      onRotate,\n    };\n  // 动画时间\n  const currentSpeed = speedFn ? speedFn(activeAnimation) : defaultSpeed;\n  const currentEasing = easingFn ? easingFn(activeAnimation) : defaultEasing;\n  const slideSpeed = speedFn ? speedFn(3) : defaultSpeed + 200;\n  const slideEasing = easingFn ? easingFn(3) : defaultEasing;\n\n  return (\n    <SlidePortal\n      className={`PhotoView-Portal${!currentOverlayVisible ? ' PhotoView-Slider__clean' : ''}${\n        !visible ? ' PhotoView-Slider__willClose' : ''\n      }${className ? ` ${className}` : ''}`}\n      role=\"dialog\"\n      onClick={(e) => e.stopPropagation()}\n      container={portalContainer}\n    >\n      {visible && <PreventScroll />}\n      <div\n        className={`PhotoView-Slider__Backdrop${maskClassName ? ` ${maskClassName}` : ''}${\n          activeAnimation === 1\n            ? ' PhotoView-Slider__fadeIn'\n            : activeAnimation === 2\n            ? ' PhotoView-Slider__fadeOut'\n            : ''\n        }`}\n        style={{\n          background: currentOpacity ? `rgba(0, 0, 0, ${currentOpacity})` : undefined,\n          transitionTimingFunction: currentEasing,\n          transitionDuration: `${touched ? 0 : currentSpeed}ms`,\n          animationDuration: `${currentSpeed}ms`,\n        }}\n        onAnimationEnd={onAnimationEnd}\n      />\n      {bannerVisible && (\n        <div className=\"PhotoView-Slider__BannerWrap\">\n          <div className=\"PhotoView-Slider__Counter\">\n            {index + 1} / {imageLength}\n          </div>\n          <div className=\"PhotoView-Slider__BannerRight\">\n            {toolbarRender && overlayParams && toolbarRender(overlayParams)}\n            <CloseIcon className=\"PhotoView-Slider__toolbarIcon\" onClick={close} />\n          </div>\n        </div>\n      )}\n      {adjacentImages.map((item: DataType, currentIndex) => {\n        // 截取之前的索引位置\n        const nextIndex =\n          !enableLoop && index === 0 ? index + currentIndex : virtualIndexRef.current - 1 + currentIndex;\n\n        return (\n          <PhotoBox\n            key={enableLoop ? `${item.key}/${item.src}/${nextIndex}` : item.key}\n            item={item}\n            speed={currentSpeed}\n            easing={currentEasing}\n            visible={visible}\n            onReachMove={handleReachMove}\n            onReachUp={handleReachUp}\n            onPhotoTap={() => handlePhotoTap(photoClosable)}\n            onMaskTap={() => handlePhotoTap(maskClosable)}\n            wrapClassName={photoWrapClassName}\n            className={photoClassName}\n            style={{\n              left: `${(innerWidth + horizontalOffset) * nextIndex}px`,\n              transform: `translate3d(${x}px, 0px, 0)`,\n              transition: touched || pause ? undefined : `transform ${slideSpeed}ms ${slideEasing}`,\n            }}\n            loadingElement={loadingElement}\n            brokenElement={brokenElement}\n            onPhotoResize={handleResize}\n            isActive={(currentImage && currentImage.key) === item.key}\n            expose={updateState}\n          />\n        );\n      })}\n      {!isTouchDevice && bannerVisible && (\n        <>\n          {(enableLoop || index !== 0) && (\n            <div className=\"PhotoView-Slider__ArrowLeft\" onClick={() => changeIndex(index - 1, true)}>\n              <ArrowLeft />\n            </div>\n          )}\n          {(enableLoop || index + 1 < imageLength) && (\n            <div className=\"PhotoView-Slider__ArrowRight\" onClick={() => changeIndex(index + 1, true)}>\n              <ArrowRight />\n            </div>\n          )}\n        </>\n      )}\n      {overlayRender && overlayParams && (\n        <div className=\"PhotoView-Slider__Overlay\">{overlayRender(overlayParams)}</div>\n      )}\n    </SlidePortal>\n  );\n}\n","import { useReducer, useRef } from 'react';\nimport type { ActiveAnimationType } from '../types';\nimport useForkedVariable from './useForkedVariable';\n\n/**\n * 动画关闭处理真实关闭状态\n * 通过 onAnimationEnd 回调实现 leaveCallback\n */\nexport default function useAnimationVisible(\n  visible: boolean | undefined,\n  afterClose?: () => void,\n): [realVisible: boolean | undefined, activeAnimation: ActiveAnimationType, onAnimationEnd: () => void] {\n  const [, handleRender] = useReducer((c) => !c, false);\n\n  const activeAnimation = useRef<ActiveAnimationType>(0);\n\n  // 可见状态分支\n  const [realVisible, modifyRealVisible] = useForkedVariable(visible, (modify) => {\n    // 可见状态：设置进入动画\n    if (visible) {\n      modify(visible);\n      activeAnimation.current = 1;\n    } else {\n      activeAnimation.current = 2;\n    }\n  });\n\n  function onAnimationEnd() {\n    // 动画结束后触发渲染\n    handleRender();\n    // 结束动画：设置隐藏状态\n    if (activeAnimation.current === 2) {\n      modifyRealVisible(false);\n      // 触发隐藏回调\n      if (afterClose) {\n        afterClose();\n      }\n    }\n    // 重置状态\n    activeAnimation.current = 0;\n  }\n\n  return [\n    /**\n     * 真实可见状态\n     */\n    realVisible,\n    /**\n     * 正在进行的动画\n     */\n    activeAnimation.current,\n    /**\n     * 动画结束后回调\n     */\n    onAnimationEnd,\n  ];\n}\n","import { useRef, useMemo } from 'react';\n\n/**\n * 逻辑分叉变量处理\n * 此 hook 不触发额外渲染\n */\nexport default function useForkedVariable<T>(initial: T, updater: (modify: (variable: T) => void) => void) {\n  // 初始分叉变量\n  const forkedRef = useRef(initial);\n\n  function modify(next: T) {\n    forkedRef.current = next;\n  }\n\n  useMemo(() => {\n    // 参数变化之后同步内部分叉变量\n    updater(modify);\n  }, [initial]);\n\n  return [forkedRef.current, modify] as const;\n}\n","import { useMemo } from 'react';\nimport type { DataType } from '../types';\n\n/**\n * 截取相邻三张图片\n */\nexport default function useAdjacentImages(images: DataType[], index: number, loop: boolean) {\n  return useMemo(() => {\n    const imageLength = images.length;\n    if (loop) {\n      const connected = images.concat(images).concat(images);\n      return connected.slice(imageLength + index - 1, imageLength + index + 2);\n    }\n    return images.slice(Math.max(index - 1, 0), Math.min(index + 2, imageLength + 1));\n  }, [images, index, loop]);\n}\n","import React, { useMemo, useRef } from 'react';\nimport type { DataType, PhotoProviderBase } from './types';\nimport useMethods from './hooks/useMethods';\nimport useSetState from './hooks/useSetState';\nimport PhotoContext from './photo-context';\nimport PhotoSlider from './PhotoSlider';\n\nexport interface PhotoProviderProps extends PhotoProviderBase {\n  children: React.ReactNode;\n  onIndexChange?: (index: number, state: PhotoProviderState) => void;\n  onVisibleChange?: (visible: boolean, index: number, state: PhotoProviderState) => void;\n}\n\ntype PhotoProviderState = {\n  images: DataType[];\n  visible: boolean;\n  index: number;\n};\n\nconst initialState: PhotoProviderState = {\n  images: [],\n  visible: false,\n  index: 0,\n};\n\nexport default function PhotoProvider({ children, onIndexChange, onVisibleChange, ...restProps }: PhotoProviderProps) {\n  const [state, updateState] = useSetState(initialState);\n  const uniqueIdRef = useRef(0);\n  const { images, visible, index } = state;\n\n  const methods = useMethods({\n    nextId() {\n      return (uniqueIdRef.current += 1);\n    },\n    update(imageItem: DataType) {\n      const currentIndex = images.findIndex((n) => n.key === imageItem.key);\n      if (currentIndex > -1) {\n        const nextImages = images.slice();\n        nextImages.splice(currentIndex, 1, imageItem);\n        updateState({\n          images: nextImages,\n        });\n        return;\n      }\n      updateState((prev) => ({\n        images: prev.images.concat(imageItem),\n      }));\n    },\n    remove(key: number) {\n      updateState((prev) => {\n        const nextImages = prev.images.filter((item) => item.key !== key);\n        const nextEndIndex = nextImages.length - 1;\n        return {\n          images: nextImages,\n          index: Math.min(nextEndIndex, index),\n        };\n      });\n    },\n    show(key: number) {\n      const currentIndex = images.findIndex((item) => item.key === key);\n      updateState({\n        visible: true,\n        index: currentIndex,\n      });\n      if (onVisibleChange) {\n        onVisibleChange(true, currentIndex, state);\n      }\n    },\n  });\n\n  const fn = useMethods({\n    close() {\n      updateState({\n        visible: false,\n      });\n\n      if (onVisibleChange) {\n        onVisibleChange(false, index, state);\n      }\n    },\n    changeIndex(nextIndex: number) {\n      updateState({\n        index: nextIndex,\n      });\n\n      if (onIndexChange) {\n        onIndexChange(nextIndex, state);\n      }\n    },\n  });\n\n  const value = useMemo(() => ({ ...state, ...methods }), [state, methods]);\n\n  return (\n    <PhotoContext.Provider value={value}>\n      {children}\n      <PhotoSlider\n        images={images}\n        visible={visible}\n        index={index}\n        onIndexChange={fn.changeIndex}\n        onClose={fn.close}\n        {...restProps}\n      />\n    </PhotoContext.Provider>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type React from 'react';\nimport { Children, cloneElement, useContext, useEffect, useMemo, useRef } from 'react';\nimport useInitial from './hooks/useInitial';\nimport useMethods from './hooks/useMethods';\nimport type { PhotoContextType } from './photo-context';\nimport PhotoContext from './photo-context';\nimport type { PhotoRenderParams } from './types';\n\nexport interface PhotoViewProps {\n  /**\n   * 图片地址\n   */\n  src?: string;\n  /**\n   * 自定义渲染，优先级比 src 低\n   */\n  render?: (props: PhotoRenderParams) => React.ReactNode;\n  /**\n   * 自定义覆盖节点\n   */\n  overlay?: React.ReactNode;\n  /**\n   * 自定义渲染节点宽度\n   */\n  width?: number;\n  /**\n   * 自定义渲染节点高度\n   */\n  height?: number;\n  /**\n   * 子节点，一般为缩略图\n   */\n  children?: React.ReactElement;\n  /**\n   * 触发的事件\n   */\n  triggers?: ('onClick' | 'onDoubleClick')[];\n}\n\nconst PhotoView: React.FC<PhotoViewProps> = ({\n  src,\n  render,\n  overlay,\n  width,\n  height,\n  triggers = ['onClick'],\n  children,\n}) => {\n  const photoContext = useContext<PhotoContextType>(PhotoContext);\n  const key = useInitial(() => photoContext.nextId());\n  const originRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    return () => {\n      photoContext.remove(key);\n    };\n  }, []);\n\n  function invokeChildrenFn(eventName: string, e: React.SyntheticEvent) {\n    if (children) {\n      const eventFn = children.props[eventName];\n      if (eventFn) {\n        eventFn(e);\n      }\n    }\n  }\n\n  const fn = useMethods({\n    render(props: PhotoRenderParams) {\n      return render && render(props);\n    },\n    show(eventName: string, e: React.MouseEvent) {\n      photoContext.show(key);\n      invokeChildrenFn(eventName, e);\n    },\n  });\n\n  const eventListeners = useMemo(() => {\n    const listener = {};\n    triggers.forEach((eventName) => {\n      listener[eventName] = fn.show.bind(null, eventName);\n    });\n    return listener;\n  }, []);\n\n  useEffect(() => {\n    photoContext.update({\n      key,\n      src,\n      originRef,\n      render: fn.render,\n      overlay,\n      width,\n      height,\n    });\n  }, [src]);\n\n  if (children) {\n    return Children.only(cloneElement(children, { ...eventListeners, ref: originRef }));\n  }\n  return null;\n};\n\nexport default PhotoView;\n","import { useRef } from 'react';\n\nexport default function useInitial<T extends (...args: any) => any>(callback: T) {\n  const { current } = useRef({ sign: false, fn: undefined as ReturnType<T> });\n  if (!current.sign) {\n    current.sign = true;\n    current.fn = callback();\n  }\n  return current.fn;\n}\n"],"names":["useMethods","fn","current","useRef","curr","undefined","Object","create","keys","forEach","key","call","useSetState","initialState","useReducer","state","action","createContext","isTouchDevice","window","limitNumber","value","min","max","Math","limitScale","scale","buffer","test","navigator","userAgent","useEffect","useLayoutEffect","useEventListener","type","options","latest","wrapper","evt","addEventListener","removeEventListener","SlidePortal","container","document","body","rest","createPortal","React","CloseIcon","props","width","height","viewBox","d","ArrowLeft","ArrowRight","PreventScroll","style","lastOverflow","overflow","getMultipleTouchPosition","touches","clientX","clientY","length","nextClientX","nextClientY","sqrt","computePositionEdge","position","size","innerSize","currentWidth","outOffset","closedEdge","getPositionOnMoveOrScale","x","y","toScale","offsetX","offsetY","innerWidth","innerHeight","closedEdgeX","centerClientX","centerClientY","lastCX","lastCY","getRotateSize","rotate","isVertical","getSuitableImageSize","naturalWidth","naturalHeight","currentHeight","autoWidth","autoHeight","pause","useDebounceCallback","callback","leading","maxWait","wait","callbackRef","prev","trailingTimeout","clearTrailing","clearTimeout","useCallback","args","now","Date","apply","last","offset","setTimeout","cancel","rebound","start","bound","easeOutMove","defaultSpeed","t","easeOutQuart","end","speed","easing","complete","distance","startTime","frameId","calcMove","time","raf","cancelAnimationFrame","requestAnimationFrame","initialRect","T","L","W","H","FIT","useMountedRef","mountedRef","Spinner","className","fill","opacity","Photo","src","loaded","broken","onPhotoLoad","loadingElement","brokenElement","restProps","onLoad","e","target","onError","alt","touched","maskTouched","CX","CY","lastX","lastY","lastScale","touchTime","touchLength","stopRaf","reach","PhotoBox","item","render","customWidth","customHeight","originRef","visible","wrapClassName","onPhotoTap","onMaskTap","onReachMove","onReachUp","onPhotoResize","isActive","expose","updateState","initialTouchRef","mounted","onScale","onRotate","handleMove","currentTouchLength","isStillX","abs","isStillY","currentReach","horizontalCloseEdge","initialTouchState","verticalCloseEdge","reachPosition","getReachType","updateRaf","singleTap","doubleTap","continuousClick","debounceTap","callbackX","callbackY","callbackS","slideToPosition","nextX","nextY","nextScale","X","spatial","Y","S","safeScale","touchedTime","beginEdgeX","beginX","beginEdgeY","beginY","moveTime","targetX","targetY","speedX","speedY","speedT","edgeX","edgeY","initialSpeed","v","s","lastTime","dt","direction","sign","a","f","ds","caf","scrollMove","isEdgeX","currentX","isEdgeY","currentY","resultX","resultY","handlePhotoTap","currentClientX","currentClientY","handleUp","handleStart","handleMaskStart","preventDefault","passive","touch","changedTouches","useIsomorphicLayoutEffect","updateEasing","realWidth","realHeight","realScale","execRef","lead","moveScale","useTargetScale","autoScale","useState","originRect","updateOriginRect","easingMode","updateEasingMode","initialTime","OK","handleToShape","currentShape","element","nodeType","getBoundingClientRect","top","left","tagName","getComputedStyle","objectFit","handleUpdateOrigin","useAnimationOrigin","centerWidth","centerHeight","miniMode","useAnimationPosition","isPause","currentScale","transitionCSS","attrs","onMouseDown","stopPropagation","button","onTouchStart","onWheel","deltaY","transform","transition","willChange","params","bg","lastBg","overlay","minimal","PhotoSlider","loop","speedFn","easingFn","photoClosable","maskClosable","maskOpacity","pullClosable","bannerVisible","overlayRender","toolbarRender","maskClassName","photoClassName","photoWrapClassName","images","index","controlledIndex","controlledIndexChange","onIndexChange","onClose","afterClose","portalContainer","innerIndex","updateInnerIndex","isControlled","hasOwnProperty","virtualIndexRef","imageLength","currentImage","enableLoop","handleRender","c","activeAnimation","initial","updater","forkedRef","modify","next","useMemo","useForkedVariable","modifyRealVisible","useAnimationVisible","realVisible","onAnimationEnd","close","changeIndex","nextIndex","currentIndex","limitIndex","nextVirtualIndex","singlePageWidth","closeable","handleResize","handleReachMove","originOffsetClientX","offsetClientX","handleReachHorizontalMove","handleReachVerticalMove","handleReachUp","offsetClientY","willClose","currentTranslateX","adjacentImages","concat","slice","useAdjacentImages","currentOverlayVisible","currentOpacity","overlayParams","overlayVisible","currentSpeed","currentEasing","slideSpeed","slideEasing","role","onClick","background","transitionTimingFunction","transitionDuration","animationDuration","map","children","onVisibleChange","uniqueIdRef","methods","nextId","update","imageItem","findIndex","n","nextImages","splice","remove","filter","show","PhotoContext","Provider","triggers","photoContext","useContext","eventName","eventFn","invokeChildrenFn","eventListeners","listener","bind","Children","only","cloneElement","ref"],"mappings":"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"}